@import "../proto/definitions/variables.css";

:root
{
    --tooltipOffsetX:       8px; /* 5px */
    --tooltipOffsetY:       8px; /* 5px */
    --tooltipOffsetXY:      26px;
    --tooltipOffsetXYAfter: 20px;

    --pointerSize:          10px;
    --halfPointer:          5px;
}


.default
{
    position:       relative;
    display:        inline-block;

    max-width:      100%;
}


.tooltip
{
    display:            block;
    position:           absolute;

    width:              auto;
    max-width:          400px;

    margin-bottom:      0;

    border-radius:      2px;

    background-color:   var( --PC-GREY--D15 );
    box-shadow:         var( --boxShadow );

    z-index:            10000;

    &::before
    {
        content:            "";
        position:           absolute;
        box-sizing:         border-box;
    }
}


.message
{
    padding-top:        var( --spacing-1 );
    padding-right:      var( --spacing-2 );
    padding-bottom:     var( --spacing-1 );
    padding-left:       var( --spacing-2 );
    color:              var( --PC-WHITE );
}


.messageText
{
    & a,
    & a:hover
    {
        color:              var( --PC-WHITE );
        text-decoration:    underline;
    }
}


.content
{
    display:        flex;
    flex-direction: column;
}


.iconContainer
{
    padding:        var( --spacing-1 );
}


.position__top,
.position__bottom,
.position__topLeft,
.position__topRight,
.position__bottomLeft,
.position__bottomRight
{
    .tooltip
    {
        &::before
        {
            left:           0;
            width:          100%;
            height:         var( --tooltipOffsetY );
        }
    }
}


.position__top,
.position__bottom
{
    .tooltip
    {
        left:   50%;
    }
}


.position__top,
.position__topLeft,
.position__topRight
{
    .tooltip
    {
        &::before
        {
            bottom: -var( --tooltipOffsetY );
        }
    }
}


.position__top
{
    .tooltip
    {
        top:        0;
        transform:  translateX(-50%) translateY( -100% ) translateY( -var( --tooltipOffsetY ) ) ;
    }
}


.position__bottom,
.position__bottomLeft,
.position__bottomRight
{
    .tooltip
    {
        &::before
        {
            top:    -var( --tooltipOffsetY );
        }
    }
}


.position__bottom
{
    .tooltip
    {
        bottom:     0;
        transform:  translateX(-50%) translateY( 100% ) translateY( var( --tooltipOffsetY ) ) ;
    }
}


.position__left,
.position__right
{
    .tooltip
    {
        top:    50%;

        &::before
        {
            top:    0;
            width:  var( --tooltipOffsetY );
            height: 100%;
        }
    }
}


.position__left
{
    .tooltip
    {
        top:        50%;
        left:       0;

        transform:  translateX(-100%) translateX( -var( --tooltipOffsetX )  ) translateY( -50% );

        &::before
        {
            right:  -var( --tooltipOffsetX );
        }
    }
}


.position__right
{
    .tooltip
    {
        top:        50%;
        right:      0;

        transform:  translateX(100%) translateX( var( --tooltipOffsetX )  ) translateY( -50% );

        &::before
        {
            left:   -var( --tooltipOffsetX );
        }
    }
}


.position__topLeft,
.position__topRight
{
    .tooltip
    {
        top:    0;
        left:   50%;
    }
}


.position__bottomLeft,
.position__bottomRight
{
    .tooltip
    {
        bottom:     0;
        left:       50%;
    }
}


.position__topLeft
{
    .tooltip
    {
        transform:  translateX( -100% ) translateX( var( --tooltipOffsetXY ) ) translateY( -100% ) translateY( -var( --tooltipOffsetY ) );
    }
}


.position__topRight
{
    .tooltip
    {
        transform:  translateX( -var( --tooltipOffsetXY ) ) translateY( -100% ) translateY( -var( --tooltipOffsetY ) );
    }
}


.position__bottomLeft
{
    .tooltip
    {
        transform: translateX( -100% ) translateX( var( --tooltipOffsetXY ) ) translateY( 100% ) translateY( var( --tooltipOffsetY ) );
    }
}


.position__bottomRight
{
    .tooltip
    {
        transform:  translateX( -var( --tooltipOffsetXY ) ) translateY( 100% ) translateY( var( --tooltipOffsetY ) ) ;
    }
}

.role__critical
{
    .tooltip
    {
        background-color:         var( --PC-RED );
    }
}

.role__promoted
{
    .tooltip
    {
        background-color:         var( --PC-GREEN );
    }
}

.role__warning
{
    .tooltip
    {
        background-color:         var( --PC-ORANGE );
    }
}

.ghost
{
    display:     block;
    white-space: pre-wrap;
    word-wrap:   break-word;
    visibility:  hidden;
    position:    fixed;
    width:       100vw;
    left:         -9999px;
}
