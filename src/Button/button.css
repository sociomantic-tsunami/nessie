@import "../proto/base.css";

.default
{
    position:               relative;
    display:                table; /* flex doesn’t work here */

    width:                  auto;

    padding:                0;

    border:                 none;
    border-radius:          2px;

    background:             transparent;
    cursor:                 pointer;
    text-transform:         uppercase;

    .iconContainer
    {
        display:            flex;
        justify-content:    center;
        align-items:        center;
    }
}


.content
{
    /* Firefox doesn’t properly support flex directly
     * on button so we need to set it here
     */
    display:            flex;
    justify-content:    center;
    align-items:        center;
    height:         40px;
    padding:            0 var( --spacing-2 );
    text-align:         center;
}


.label
{
    @extend %Nessie-SemiBold;

    font-size:          var( --typo-2 );
    line-height:        var( --line-height-s );
    letter-spacing:     0.4px;

    overflow:           hidden;
    text-overflow:      ellipsis;
    white-space:        nowrap;
}


.iconPosition__right
{
    .content
    {
        flex-direction: row-reverse;
    }

    .iconContainer
    {
        margin-left:    4px; /* space between icon and text */
        margin-right:   -var( --spacing-1 ); /* half of content padding */
    }
}


.iconPosition__left
{
    .iconContainer
    {
        margin-right:   4px; /* space between icon and text */
        margin-left:    -var( --spacing-1 ); /* half of content padding */
    }
}


.role__default
{
    background:         var( --PC-BLUE );
    color:              var( --PC-WHITE );

    &.fakeHovered,
    &:hover
    {
        background:     var( --PC-BLUE--DARK );
        color:          var( --PC-WHITE );
    }
}


.role__secondary
{
    background:         var( --PC-GREY--L90 );
    color:              var( --PC-GREY--L25 );

    &.fakeHovered,
    &:hover
    {
        background:     var( --PC-GREY--L70 );
        color:          var( --PC-GREY--L25 );
    }

    .icon
    {
        fill:           var( --PC-GREY--L25 );
        color:          var( --PC-GREY--L25 );
    }

    .loadingOverlay
    {
        .spinner
        {
            border-color:           color( var( --PC-GREY--L25 ) a( 25% ) );

            &::after
            {
                border-top-color:   var( --PC-GREY--L25 );
            }
        }
    }
}


.role__promoted
{
    background:     var( --PC-GREEN );
    color:          var( --PC-WHITE );

    &.fakeHovered,
    &:hover
    {
        background: var( --PC-GREEN--DARK );
        color:      var( --PC-WHITE );
    }
}


.role__critical
{
    background:     var( --PC-RED );
    color:          var( --PC-WHITE );

    &.fakeHovered,
    &:hover
    {
        background: var( --PC-RED--DARK );
        color:      var( --PC-WHITE );
    }
}


.role__warning
{
    background:     var( --PC-ORANGE );
    color:          var( --PC-WHITE );

    &.fakeHovered,
    &:hover
    {
        background: var( --PC-ORANGE--DARK );
        color:      var( --PC-WHITE );
    }
}


.role__subtle
{
    color:          var( --PC-BLUE );
    background:     transparent;

    .content
    {
        min-width:      70px;

        border-radius:  15px;
        border:         1px solid var( --PC-BLUE );

        box-sizing:     border-box;
    }

    &.fakeHovered,
    &:hover
    {
        color:          var( --PC-WHITE );

        .content
        {
            background: var( --PC-BLUE );
        }

        .icon
        {
            fill:       var( --PC-WHITE );
            color:      var( --PC-WHITE );
        }
    }

    .icon
    {
        fill:           var( --PC-BLUE );
        color:          var( --PC-BLUE );
    }

    .loadingOverlay
    {
        .spinner
        {
            border-color:           color( var( --PC-BLUE  ) a( 25% ) );

            &::after
            {
                border-top-color:   var( --PC-BLUE );
            }
        }
    }
}


.role__control
{
    color:          var( --PC-GREY--DARK );

    .icon
    {
        fill:       var( --PC-GREY--DARK );
        color:      var( --PC-GREY--DARK );
    }

    &.fakeHovered,
    &:hover
    {
        color:      var( --PC-BLUE );

        .icon
        {
            fill:   var( --PC-BLUE );
            color:  var( --PC-BLUE );
        }
    }

    .loadingOverlay
    {
        .spinner
        {
            border-color:           color( var( --PC-GREY--DARK ) a( 25% ) );

            &::after
            {
                border-top-color:   var( --PC-GREY--DARK );
            }
        }
    }
}


.loading,
.disabled
{
    cursor:         default;
    pointer-events: none;
}


.loading
{
    .label,
    .iconContainer
    {
        opacity:    0;
    }
}


.disabled
{
    &.role__default
    {
        background: var( --PC-BLUE--LIGHT );
        color:      var( --PC-BLUE--L25 );

        .icon
        {
            fill:   color( var( --PC-BLUE ) tint( 25% ) );
            color:  color( var( --PC-BLUE ) tint( 25% ) );
        }
    }

    &.role__secondary
    {
        color:      var( --PC-GREY--L55 );

        .icon
        {
            fill:   var( --PC-GREY--L55 );
            color:  var( --PC-GREY--L55 );
        }
    }

    &.role__promoted
    {
        background: var( --PC-GREEN--LIGHT );
        color:      var( --PC-GREEN--L25 );

        .icon
        {
            fill:   color( var( --PC-GREEN ) tint( 25% ) );
            color:  color( var( --PC-GREEN ) tint( 25% ) );
        }
    }

    &.role__critical
    {
        background: var( --PC-RED--LIGHT );
        color:      var( --PC-RED--L25 );

        .icon
        {
            fill:   color( var( --PC-RED ) tint( 25% ) );
            color:  color( var( --PC-RED ) tint( 25% ) );
        }
    }

    &.role__warning
    {
        background: var( --PC-ORANGE--LIGHT );
        color:      var( --PC-ORANGE--L25 );

        .icon
        {
            fill:   color( var( --PC-RED ) tint( 25% ) );
            color:  color( var( --PC-RED ) tint( 25% ) );
        }
    }

    &.role__subtle
    {
        color:              var( --PC-BLUE--L40 );

        .content
        {
            background:     var( --PC-WHITE );
            border-color:   var( --PC-BLUE--LIGHT );
        }

        .icon
        {
            fill:           var( --PC-BLUE--L40 );
            color:          var( --PC-BLUE--L40 );
        }
    }
}


.loadingOverlay
{
    display:            flex;
    flex-direction:     row;
    justify-content:    center;
    align-items:        center;

    position:           absolute;

    top:                0;
    bottom:             0;

    left:               0;
    right:              0;

    width:              100%;
    height:             100%;

    .spinner
    {
        border-color:           color( var( --PC-WHITE ) a( 50% ) );

        &::after
        {
            border-top-color:   var( --PC-WHITE );
        }
    }
}
