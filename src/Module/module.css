@import "../proto/base.css";

:root
{
    --controlsHeight:   24px;
    --errorBorder:      5px;
}

.default
{
    /* this needs to be a flex column for vertical alignment
    * of header w/min-height (flexbugs #3) */
    display:        flex;
    flex-direction: column;

    margin-bottom:  var( --spacing-3 );

    background:     var( --PC-WHITE );

    box-shadow:     0 4px 10px 0 color( var( --PC-GREY ) a( 10% ) );

    .default + .default
    {
        margin-top: var( --spacing-3 );
    }

    .header,
    .content
    {
        position:   relative;
        margin:     0;

        padding:    var( --spacing-2 ) var( --spacing-3 );
    }

    .header
    {
        transition:         background-color 200ms ease-in-out;

        position:           relative;

        display:            flex;
        flex-direction:     row;
        justify-content:    flex-start;
        align-items:        center;
    }

    .content
    {
        padding-bottom: var( --spacing-5 );
    }

    .title
    {
        flex:       0 0 100%;
        max-width:  100%;
    }

    .controls
    {
        display:            flex;
        position:           absolute;

        height:             var( --controlsHeight );
        top:                calc( 50% - ( var( --controlsHeight ) / 2 ) );

        right:              var( --spacing-3 );

        flex-direction:     row;
        align-items:        center;
        justify-content:    flex-end;

        & > *
        {
            flex:           0 0 auto;

            margin-right:   var( --spacing-2 );
            margin-bottom:  0;

            &:last-child
            {
                margin-right:   0;
            }
        }
    }

    .loadingOverlay
    {
        display:            flex;
        flex-direction:     row;
        justify-content:    center;
        align-items:        center;

        position:           absolute;
        z-index:            1;

        top:                0;
        bottom:             0;
        left:               0;
        right:              0;

        width:              100%;
        height:             100%;

        background:         color( var( --PC-WHITE ) a( 50% ) );
    }
}

.level__3,
.level__4
{
    & > .header,
    & > .content
    {
        padding-top:    var( --spacing-3 );
        padding-bottom: var( --spacing-3 );
    }
}

.collapsible
{
    & > .header
    {
        cursor: pointer;
    }

    &:not( .collapsed ) .header,
    &.collapsed > .header:hover
    {
        background: var( --PC-GREY--L95 );
    }

}

.collapsed
{
    & > .content
    {
        display:        none;
    }
}

.moduleError
{
    border-left: var( --errorBorder ) solid var( --PC-RED );

    & > .header,
    & > .content
    {
        padding-left: calc( var( --spacing-3 ) - var( --errorBorder ) );
    }
}
