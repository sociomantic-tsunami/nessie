/*
 * Copyright (c) 2017-2018 dunnhumby Germany GmbH.
 * All rights reserved.
 *
 * This source code is licensed under the MIT license found in the LICENSE file
 * in the root directory of this source tree.
 *
 */

@import "../proto/base.css";

:root
{
    --horizontalSliderHeight:   var( --spacing-5 );
    --verticalSliderHeight:     300px;

    --trackThickness:           calc( var( --spacing-1 ) / 4 );
    --handleSize:               var( --spacing-2 );
    --tickSize:                 calc( var( --spacing-1 / 2 ) );

    --stepLabelLineHeight:      var( --line-height-s );
}


.default
{
    .inputContainer
    {
        position:   absolute;
        left:       -99999px;
    }

    .labelContainer
    {
        margin-bottom:  var( --spacing-1 );
    }

    .handle,
    .trackFill
    {
        position:   absolute;
    }

    .trackContainer
    {
        display:    flex;
    }

    .track
    {
        position:       relative;

        width:          var( --trackThickness );
        border-radius:  calc( var( --trackThickness ) / 2 );

        background:     var( --PC-GREY--L90 );

        user-select:    none;
        cursor:         pointer;

        -webkit-tap-highlight-color:    transparent;
    }

    .trackFill
    {
        border-radius:  calc( var( --trackThickness ) / 2 );
        background:     var( --PC-BLUE );
    }

    .handle
    {
        width:          var( --handleSize );
        height:         var( --handleSize );

        border-radius:  50%;
        background:     var( --PC-BLUE );

        cursor:         grab;

        z-index:        1;

        &::after
        {
            content:        '';
            display:        block;

            position:       absolute;
            top:            50%;
            left:           50%;
            transform:      translateX( -50%) translateY( -50% );

            width:          var( --spacing-3 );
            height:         var( --spacing-3 );

            background:     var( --PC-BLUE--D15 );

            border-radius:  50%;

            opacity:        0;
            transition:     opacity 450ms;
        }

        &:active
        {
            cursor: grabbing;
        }
    }

    .handleFocus
    {
        &::after
        {
            opacity:    0.2;
        }
    }

    .handleLabel
    {
        display:    none;
    }


    /* Ticks */

    .ticksContainer
    {
        position:   relative;
        width:      100%;
        height:     100%;
    }

    .tick
    {
        position:   absolute;
        background: var( --PC-WHITE );
        font-size:  0;
    }

    /* Step labels */

    .stepLabelsContainer
    {
        position:   relative;
    }

    .stepLabel
    {
        position:       absolute;

        max-width:      100%;

        white-space:    nowrap;
        overflow:       hidden;
        text-overflow:  ellipsis;

        @extend         %Nessie-RegularIt;
        font-size:      var( --typo-3 );
        line-height:    var( --line-height-s );
        color:          var( --PC-GREY--L40 );
    }
}




.orientation__horizontal
{
    .trackContainer
    {
        flex-direction: column;
    }

    .track,
    .stepLabelsContainer
    {
        width:          calc( 100% - var( --handleSize ) );

        margin-left:    calc( var( --handleSize ) / 2 );
        margin-right:   calc( var( --handleSize ) / 2 );
    }

    .track
    {
        height:         var( --trackThickness );

        margin-top:     calc( ( var( --horizontalSliderHeight ) - var( --trackThickness ) ) / 2 );
        margin-bottom:  calc( ( var( --horizontalSliderHeight ) - var( --trackThickness ) ) / 2 );
    }

    .handle
    {
        top:        50%;
        transform:  translateX( -50% ) translateY( -50% );
    }

    .trackFill
    {
        height: var( --trackThickness );
    }

    .stepLabelsContainer
    {
        height:         var( --stepLabelLineHeight );

        margin-left:    calc( var( --handleSize) / 2 );
        margin-right:   calc( var( --handleSize) / 2 );
    }

    .stepLabelsContainer
    {
        margin-bottom:  var( --spacing-1 );
    }

    .track + .stepLabelsContainer
    {
        margin-top:     var( --spacing-1 );
        margin-bottom:  0;
    }

    .stepLabel
    {
        transform:  translateX( -50% );
    }

    .tick
    {
        width:  var( --tickSize );
        height: var( --trackThickness );

        top:        50%;
        transform:  translateX( -50% ) translateY( -50% );
    }
}




.orientation__vertical
{
    width:  auto;
    height: var( --verticalSliderHeight );

    .trackContainer
    {
        height: 100%;
    }

    .track
    {
        width:          var( --trackThickness );
        height:         calc( 100% - var( --handleSize ) );

        margin-top:     calc( var( --handleSize ) / 2 );
        margin-bottom:  calc( var( --handleSize ) / 2 );
        margin-left:    calc( ( var( --horizontalSliderHeight ) - var( --trackThickness ) ) / 2 );
        margin-right:   calc( ( var( --horizontalSliderHeight ) - var( --trackThickness ) ) / 2 );
    }

    .trackFill
    {
        width:  var( --trackThickness );
    }

    .handle
    {
        left:       50%;
        transform:  translateX( -50% ) translateY( 50% );
    }

    .stepLabelsContainer
    {
        display:    none;
    }

    .tick
    {
        width:  var( --trackThickness );
        height: var( --tickSize );

        left:       50%;
        transform:  translateX( -50% ) translateY( 50% );
    }
}




.hasHandleLabels
{
    .handleLabel
    {
        display:            flex;
        position:           relative;
        justify-content:    center;

        color:              var( --PC-BLUE );
        line-height:        var( --line-height-s );

        cursor:             default;
        user-select:        none;
    }
}


.handleLabelPosition__top
{
    .handleLabel
    {
        top:        calc( -1 * ( var( --spacing-1 ) / 2 ) );
        transform:  translateY( -100% );
    }
}

.handleLabelPosition__bottom
{
    .handleLabel
    {
        bottom:     calc( -1 * ( var( --spacing-1 ) / 2 ) );
        transform:  translateY( 100% );
    }
}

.handleLabelPosition__right
{
    .handleLabel
    {
        right:      calc( -1 * ( var( --spacing-1 ) / 2 ) );
        transform:  translateX( 100% );
    }
}

.handleLabelPosition__left
{
    .handleLabel
    {
        left:       calc( -1 * ( var( --spacing-1 ) / 2 ) );
        transform:  translateX( -100% );

    }
}


.error
{
    .trackFill
    {
        background: color( var( --PC-RED ) a( 35% ) );
    }

    .handle
    {
        background: var( --PC-RED ) !important;

        &::after
        {
            background: var( --PC-RED--D15 );
        }
    }

    .handleLabel
    {
        color:  var( --PC-RED );
    }
}


.grabbing
{
    .handle,
    .trackFill
    {
        transition: none;
    }
}


.disabled
{
    .track,
    .handle
    {
        cursor: default !important;
    }

    .handle
    {
        background: var( --PC-BLUE--L70 );

        &::after
        {
            display:    none;
        }
    }

    .trackFill
    {
        background: var( --PC-BLUE--L70 );
    }

    .stepLabel
    {
        color:  var( --PC-GREY--L70 );
    }
}
