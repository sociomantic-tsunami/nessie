@import "../proto/base.css";


:root
{
    --inputHeight:          4rem;
    --inputHeightMultiTag:  4.8rem;
    --tagHeight:            3.2rem;
    --optionHeight:         4.8rem;
    --borderWidth:          0.1rem;
    --iconSize:             2.4rem;
}


.default
{
    .main
    {
        border:             var( --borderWidth ) solid var( --PC-GREY--L70 );
        border-radius:      0.2rem;

        letter-spacing:     0;

        &:focus
        {
            outline:    none;
        }
    }

    .main:focus,
    &.fakeHovered .main,
    .mainWrapper.open .main
    {
        border-color:   var( --PC-BLUE );
        box-shadow:     0 0 0 0.1rem var( --PC-BLUE );
    }

    .main:focus .arrowInner,
    &.fakeHovered .main .arrowInner
    {
        background-image:   url( './images/light/down__hover.svg' );
    }

    .mainWrapper.open .main .arrowInner
    {
        background-image:   url( './images/light/up__hover.svg' );
    }

    .main.disabled
    {
        background: var( --PC-GREY--L90 );
        color:      var( --PC-GREY--L40 );

        border-color:   var( --PC-GREY--L70 );
        box-shadow:     none;

        pointer-events: none;

        .multipleSelectTag
        {
            background: var( --PC-GREY--L90 );
            color:      var( --PC-GREY--L40 );
        }

        .search
        {
            display:    none;
        }

        .optionsWrapper
        {
            display:    none;
        }

        .arrowInner
        {
            background-image:   url( './images/light/down.svg' );
        }

        .selectedDisplayed
        {
            color:          var( --PC-GREY--D5 );
            opacity:        0.5;
        }

        &.multipleTag
        {
            background:         var( --PC-WHITE );
        }
    }


    .optionsWrapper
    {
        position:       absolute;

        top:            calc( 100% + 1rem );
        left:           calc( -1 * var( --borderWidth ) );

        width:          calc( 100% + ( var( --borderWidth ) * 2 ) );
        max-height:     50vh;

        padding-top:    var( --spacing-1 );
        padding-bottom: var( --spacing-1 );

        box-shadow:     0 0.5rem 1rem var( --PC-GREY--L75 );

        background:     var( --PC-WHITE );

        @extend         %Nessie-Regular;

        overflow:       auto;
        z-index:        50;
    }

    .list
    {
        /* nothing to do here */
    }

    .selectedDisplayed
    {
        display:        flex;
        align-items:    center;

        box-sizing:     border-box;
        height:         calc( var( --inputHeight ) - ( 2 * var( --borderWidth ) ) );

        padding-left:   var( --spacing-2 );
        padding-right:  calc( var( --spacing-1 ) + var( --iconSize )  + var( --spacing-1 ) );

        font-size:      var( --typo-3 );
        line-height:    var( --line-height-m );
        color:          var( --PC-GREY--D5 );

        overflow:       hidden;
        white-space:    nowrap;
        text-overflow:  ellipsis;

        cursor:         pointer;

        .description
        {
            display:    none;
        }
    }

    .multipleTag
    {
        .selectedDisplayed
        {
            position:       absolute;

            top:            0;
            left:           0;
            right:          0;

            min-height:     var( --inputHeightMultiTag );

            padding-top:    calc( ( var( --inputHeightMultiTag ) - var( --line-height-m ) ) / 2 );
            padding-bottom: calc( ( var( --inputHeightMultiTag ) - var( --line-height-m ) ) / 2 );
        }
    }

    .hidden
    {
        position:   absolute;
        left:       -999999px;
    }

    .hiddenIos
    {
        position:   absolute;
        top:        0;
        opacity:    0;
        width:      1px;
        height:     1px;
    }

    .selectedHidden,
    .searchHidden,
    .placeholder
    {
        display:    none;
    }

    .option,
    .header
    {
        min-height:     var( --line-height-m );

        margin:         0;

        padding-top:    calc( ( var( --optionHeight ) - var( --line-height-m ) ) / 2 );
        padding-bottom: calc( ( var( --optionHeight ) - var( --line-height-m ) ) / 2 );
        padding-left:   var( --spacing-2 );
        padding-right:  var( --spacing-2 );

        line-height:    var( --line-height-m );
        font-size:      var( --typo-3 );
        color:          var( --PC-GREY );
    }

    .option
    {
        cursor: pointer;

        &:hover,
        &:hover .description
        {
            background: var( --PC-BLUE );
            color:      var( --PC-WHITE );
        }

        & > span,
        & > div
        {
            pointer-events: none;
        }
    }

    .selected
    {
        background: color( var( --PC-BLUE ) a( 10% ) );
    }

    .option.optionWithDescription
    {
        padding-top:    var( --spacing-1 );
        padding-bottom: var( --spacing-1 );

        font-size:      var( --typo-5 );
        line-height:    var( --line-height-m );
        color:          var( --PC-BLUE );

        &:hover
        {
            color:  var( --PC-WHITE );
        }
    }

    .description
    {
        @extend         %Nessie-Regular;

        color:          var( --PC-GREY--D25 );
        line-height:    var( --line-height-m );
        font-size:      var( --typo-3 );
    }


    .option.noResults,
    .option.disabled,
    .error .option.disabled
    {
        pointer-events: none;
        cursor:         auto;
    }

    .option.disabled,
    .error .option.disabled
    {
        color:  var( --PC-GREY--L40 );

        .description
        {
            color:  var( --PC-GREY--L55 );
        }
    }

    .arrow
    {
        position:       absolute;
        top:            50%;
        right:          calc( var( --spacing-1 ) + var( --borderWidth ) );

        transform:      translateY( -50% );

        background:     transparent;
        pointer-events: none;
    }

    .arrowInner
    {
        width:              var( --spacing-3 );
        height:             var( --spacing-3 );
        background-size:    100%;
    }

    .arrowInner
    {
        background-image:  url( './images/light/down.svg' );
    }

    .search
    {
        padding:        0;
        border:         none;
        margin:         0;

        background:     transparent;

        font-size:      var( --typo-3 );
        line-height:    var( --line-height-m );
        letter-spacing: 0.04rem;

        &:focus
        {
            outline:    none;
        }

        .main > &
        {
            position:       absolute;
            top:            0;

            box-sizing:     border-box;
            width:          100%;
            height:         100%;

            text-indent:    var( --spacing-2 );

        }

        .multiTagList > &
        {
            flex:           1 0 0%;
            min-width:      5ch;
            text-indent:    var( --spacing-1 );
        }
    }

    .multiTagList
    {
        display:            flex;
        flex-direction:     row;
        flex-wrap:          wrap;
        justify-content:    flex-start;
        align-items:        center;

        box-sizing:         border-box;

        width:              100%;
        min-height:         calc( var( --inputHeightMultiTag ) - ( 2 * var( --borderWidth ) ) );

        padding-top:        calc( var( --spacing-1 ) - var( --borderWidth ) );
        padding-right:      calc( var( --spacing-1 ) + var( --iconSize ) + var( --spacing-1 ) );
        padding-left:       var( --spacing-1 );

        & > *
        {
            margin-right:   var( --spacing-1 );
            margin-bottom:  calc( var( --spacing-1 ) - var( --borderWidth ) );

            &:last-child
            {
                margin-right:   0;
            }
        }
    }

    .multipleSelectTag
    {
        flex:           0 0 auto;
        display:        flex;
        flex-direction: row-reverse;
        align-items:    center;
        position:       relative;

        box-sizing:     border-box;
        max-width:      100%;
        height:         var( --tagHeight );

        padding-left:   var( --spacing-2 );
        padding-right:  var( --spacing-2 );

        background :    var( --PC-BLUE--L90 );
        color:          var( --PC-BLUE );

        @extend %Nessie-SemiBold;
        font-size:      var( --typo-3 );
        line-height:    var( --line-height-m );
        letter-spacing: 0.04rem;

        white-space:    nowrap;
        overflow:       hidden;
        text-overflow:  ellipsis;
    }

    .multipleTagClose
    {
        display:        block;

        width:          var( --iconSize );
        height:         var( --iconSize );

        margin-left:    var( --spacing-1 );

        background:     url( './images/control/close.svg' ) no-repeat 100%;

        cursor:         pointer;

        &:hover
        {
            background-image:   url( './images/control/close__hover.svg' );
        }
    }

    .loading,
    .loadingFailed
    {
        display:                        flex;
        pointer-events:                 none;
        color:                          #777;
    }

    .loading::after
    {
        display:                        block;
        content:                        'Loading';
        animation:                      loading 1s infinite;
    }

    .loadingFailed::after
    {
        display:                        block;
        content:                        'Data load failed';
    }

    .section
    {
        /* nothing to do here */
    }

    .header
    {
        @extend %Nessie-RegularIt;

        font-size:      var( --typo-3 );
        line-height:    var( --line-height-m );
        color:          var( --PC-GREY--D25 );
    }

    .option.optionIcon__approved,
    .option.optionIcon__declined,
    .option.optionIcon__alert,
    .option.optionIcon__ended,
    .option.optionIcon__pending,
    .option.optionIcon__error,
    .optionIcon__include,
    .optionIcon__exclude,
    .optionIcon__includeExclude
    {
        padding-left:           calc( var( --spacing-2 ) + var( --iconSize ) + var( --spacing-2 ) );

        background-repeat:      no-repeat;
        background-position:    var( --spacing-2 ) center;
        background-size:        var( --iconSize );
    }

    .option.optionIcon__approved
    {
        background-image:   url("./images/stroke-colours/approved.svg");
    }
    .option.optionIcon__declined
    {
        background-image:   url("./images/stroke-colours/declined.svg");
    }
    .option.optionIcon__ended
    {
        background-image:   url("./images/stroke-colours/ended.svg");
    }
    .option.optionIcon__pending
    {
        background-image:   url("./images/stroke-colours/pending.svg");
    }
    .option.optionIcon__alert
    {
        background-image:   url("./images/fill/alert.svg");
    }
    .option.optionIcon__error
    {
        background-image:   url("./images/fill/error.svg");
    }
    .optionIcon__include
    {
        background-image:   url("./images/include.svg");

        .disabled&
        {
            background-image:   url("./images/include__disabled.svg");
        }
    }
    .optionIcon__exclude
    {
        background-image:   url("./images/exclude.svg");

        .disabled&
        {
            background-image:   url("./images/exclude__disabled.svg");
        }
    }
    .optionIcon__includeExclude
    {
        background-image:   url("./images/include--exclude.svg");

        .disabled&
        {
            background-image:   url("./images/include--exclude__disabled.svg");
        }
    }

    .optionIcon__blueDot
    {
        position:       relative;
        padding-left:   calc( var( --spacing-2 ) + 1rem + var( --spacing-2 ) );

        &::before
        {
            content:        '';
            display:        block;
            position:       absolute;

            top:            50%;
            left:           var( --spacing-2 );

            transform:      translateY( -50% );

            width:          1rem;
            height:         1rem;

            border-radius:  1rem;
            background:     var( --PC-BLUE );
        }
    }
}


.headerMode /* Flounder as header */
{
    min-width:  40rem;

    .mainWrapper
    {
        position:       absolute;

        top:            0;
        left:           0;
        right:          0;

        /* compensate for padding set on .selectedDisplayed
         * and border set on .main (except on right side)
         */
        margin-top:     calc( -1 * ( var( --borderWidth ) + var( --spacing-2 ) ) );
        margin-bottom:  calc( -1 * ( var( --borderWidth ) + var( --spacing-2 ) ) );
        margin-left:    calc( -1 * ( var( --borderWidth ) + var( --spacing-2 ) ) );
    }

    .main,
    .main:hover,
    &.fakeHovered .main,
    &.error .main,
    .main.disabled
    {
        border-color:   transparent;
        background:     transparent;
        box-shadow:     none;
    }

    .main
    {
        display:            flex;
        justify-content:    flex-start;
        align-items:        center;
    }

    &:not( .error ) .main .selectedDisplayed
    {
        color:  var( --PC-BLUE );
    }

    .selectedDisplayed
    {
        height:         auto;
        padding-top:    var( --spacing-2 );
        padding-bottom: var( --spacing-2 );
    }

    .arrow
    {
        position:   relative;
        top:        auto;
        right:      auto;
        transform:  none;
    }

    .arrowInner
    {
        background-image:   url( './images/control/down__hover.svg' );
    }
}


.headerLevel__1 /* H1 */
{
    .selectedDisplayed
    {
        padding-left:   var( --spacing-2 );
        padding-right:  calc( var( --spacing-2 ) + 3rem + var( --spacing-2 ) );

        font-size:      var( --typo-7 );
        line-height:    var( --line-height-l );
        letter-spacing: 0.05rem;
    }

    .arrow
    {
        left:   calc( -1 * ( var( --spacing-2 ) + 3rem ) );
    }

    .arrowInner
    {
        width:  3rem;
        height: 3rem;
    }
}

.headerLevel__2 /* H2 */
{
    .selectedDisplayed
    {
        padding-left:   var( --spacing-2 );
        padding-right:  calc( var( --spacing-2 ) + 2.2rem + var( --spacing-2 ) );

        font-size:      var( --typo-6 );
        line-height:    var( --line-height-l );
        letter-spacing: 0.05rem;
    }

    .arrow
    {
        left:   calc( -1 * ( var( --spacing-2 ) + 2.2rem ) );
    }

    .arrowInner
    {
        height: 2.2rem;
        width:  2.2rem;
    }
}

.headerLevel__3 /* H3 */
{
    .selectedDisplayed
    {
        padding-left:   var( --spacing-2 );
        padding-right:  calc( var( --spacing-2 ) + 2.2rem + var( --spacing-2 ) );

        font-size:      var( --typo-4 );
        line-height:    var( --line-height-l );
        letter-spacing: 0.02rem;
    }

    .arrow
    {
        left:   calc( -1 * ( var( --spacing-2 ) + 2rem ) );
    }

    .arrowInner
    {
        height: 2rem;
        width:  2rem;
    }
}

.headerLevel__4 /* H4 */
{
    .selectedDisplayed
    {
        font-size:      var( --typo-3 );
    	line-height:    var( --line-height-l );
    	letter-spacing: 0;
    }

    /* .arrow
    {
        top:    0.3rem;
    } */

    .arrowInner
    {
        height: 1.8rem;
        width:  1.8rem;
    }
}


.error
{
    .main,
    .main:hover,
    .main:focus,
    .mainWrapper.open .main,
    .mainWrapper.open .main:hover,
    .mainWrapper.open .main:focus
    {
        border-color:    var( --PC-RED );
        box-shadow:      0 0 0 0.1rem var( --PC-RED );

        .selectedDisplayed
        {
            color:           var( --PC-RED );
        }
    }

    .main .arrowInner,
    .main:focus .arrowInner
    {
         background-image:  url( './images/down--red.svg' );
    }

    .mainWrapper.open .main .arrowInner,
    .mainWrapper.open .main:focus .arrowInner
    {
         background-image:  url( './images/up--red.svg' );
    }
}


.toggleIcon__magnifier
{
    .main:hover,
    .main:focus,
    .mainWrapper.open .main,
    &.fakeHovered .main,
    &.fakeHovered .mainWrapper.open .main
    {
        .arrowInner
        {
            background-image:   url( './images/light/search__hover.svg' );
        }
    }

    .main,
    .main.disabled
    {
        .arrowInner
        {
            background-image:   url( './images/light/search.svg' );
        }
    }
}

.toggleIcon__none
{
    .selectedDisplayed
    {
        padding-right:  var( --spacing-2 );
    }

    .multiTagList
    {
        padding-right:  0.5rem;
    }
}


@keyframes loading
{
    0%
    {
        content:    'Loading.';
    }
    33%
    {
        content:    'Loading..';
    }
    66%
    {
        content:    'Loading...';
    }
}
